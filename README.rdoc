= Simple Rest

 * http://github.com/niquola/kung_figure

== DESCRIPTION

Simple RUBY configuration DSL

== INSTALL:

  sudo gem install kung_figure

or for rails in config/environment.rb 

  config.gem 'kung_figure'

then

  sudo rake gems:install

== USAGE  

Example:
   
  module MyModule
    include KungFigure
    class Config < KungFigure::Base
      define_prop :prop1,'default1'
      define_prop :prop2, 2

      class NestedConfig < KungFigure::Base
        define_prop :prop3,'prop3'

        class NestedNestedConfig < KungFigure::Base
          define_prop :prop4,'prop4'
        end
      end
    end
  end

This will add method configure,config,load_config into MyModule:
  
  MyModule.configure do
    prop1 'new value'
    nested_config do
       prop3 'new value'
    end
  end

and accessors for configs:

  MyModule.config.prop1
  MyModule.config.nested_config.prop1

You can also include KungFigure into nested in module classes and declare Config class (subclassing KungFigure::Base)
to get similar result:


  module MyModule
    include KungFigure
    class Config < KungFigure::Base
      define_prop :prop1,'default1'
    end
    #somewhere in another file
    class WorkHorse
      include KungFigure
      class Config < KungFigure::Base
        define_prop :my_config,'default'
      end

      def meth
         config.my_config
      end
    end
  end

Then your can access configuration with:

  MyModule::WorkHorse.config or MyModule.config.work_horse
  
Or inside instances of WorkHorse as config method.
   

== CHANGE LOG

== MORE

For more info see tests and source code :)  
